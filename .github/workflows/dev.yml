name: Dev CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # - name: Set up Docker
      #   run: |
      #     docker-compose -f docker-compose.dev.yml up -d --build
      - name: Set up Docker (force no cache)
        run: |
          docker-compose -f docker-compose.dev.yml build --no-cache
          docker-compose -f docker-compose.dev.yml up -d


      # üïí Wait for services to be ready
      - name: Wait for MongoDB to become healthy
        run: |
          echo "Waiting for MongoDB to be healthy..."
          for i in {1..30}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker-compose ps -q mongo))
            echo "MongoDB health status: $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "‚úÖ MongoDB is healthy!"
              exit 0
            fi
            sleep 1
          done
          echo "‚ùå MongoDB did not become healthy in time."
          docker-compose logs mongo
          exit 1


      - name: Wait for admin-service
        run: bash scripts/wait-for-service.sh admin-service http://localhost:4006/healthz http 30

      - name: Wait for user-service
        run: bash scripts/wait-for-service.sh user-service http://localhost:4001/healthz http 30

      - name: Wait for student-service
        run: bash scripts/wait-for-service.sh student-service http://localhost:4002/healthz http 30

        #debug form-service container
      - name: Debug form-service container
        run: |
          echo "üîç Checking form-service container environment..."
          docker exec $(docker-compose ps -q form-service) printenv | grep PORT

          echo "üåê Checking listening ports..."
          docker exec $(docker-compose ps -q form-service) netstat -tulpn

      - name: Debug form-service connectivity
        run: |
          docker exec $(docker-compose ps -q form-service) curl -i http://localhost:3003/healthz

      - name: Wait for form-service
        run: bash scripts/wait-for-service.sh form-service http://localhost:4003/healthz http 30

      - name: Wait for analytics-service
        run: bash scripts/wait-for-service.sh analytics-service http://localhost:4004/healthz http 30

      - name: Wait for frontend
        run: bash scripts/wait-for-service.sh frontend http://localhost:5173 http 30

      # üß™ Run tests (skip if no test script is defined)
      - name: Run tests (admin-service)
        run: docker-compose exec -T admin-service npm run test --if-present

      - name: Run tests (user-service)
        run: docker-compose exec -T user-service npm run test --if-present

      - name: Run tests (student-service)
        run: docker-compose exec -T student-service npm run test --if-present

      - name: Run tests (form-service)
        run: docker-compose exec -T form-service npm run test --if-present

      - name: Run tests (analytics-service)
        run: docker-compose exec -T analytics-service npm run test --if-present

      - name: Run tests (frontend)
        run: docker-compose exec -T frontend npm run test --if-present

      - name: Tear down containers
        run: docker-compose -f docker-compose.dev.yml down